#Plugin version of Compose. https://stackoverflow.com/questions/76156527/what-does-the-first-line-in-the-docker-compose-yml-file-that-specifies-the-ve
services:
  patientbackapi:
    image: patientbackapi
    container_name: patientbackapi
    build:
      context: .
      dockerfile: PatientBack.API/Dockerfile    
    #Sqlserver should run on container start.
    depends_on:
      - mssql
    #ConnectionString to sql server database P10_MediLabo_Patient-back.
    #environment:
      #update connection string for using sa user.
     #- SQLSERVER_URL=Server=localhost;User Id=sa;Password=Sql20243107*;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;TrustServerCertificate=True;
     #- SQLSERVER_URL=Server=localhost;User Id=sa;Password=Sql20243107*;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;MultipleActiveResultSets=True;TrustServerCertificate=True;
     #- SQLSERVER_URL=Server=localhost;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;MultipleActiveResultSets=True;TrustServerCertificate=True;     
     #- SQLSERVER_URL=Server=localhost;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;TrustServerCertificate=True;
     #- SQLSERVER_URL=Server=127.0.0.1:1433;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;TrustServerCertificate=True;
      #- ASPNETCORE_ENVIRONMENT=Development
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=Admin2024*
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/patientbackapi.pfx
    # Host_port:container_port.
    ports:
      - "7243:8083"    

  patientdiabeteriskbackapi:
    image: patientdiabeteriskbackapi
    container_name: patientdiabeteriskbackapi
    build:
      context: .
      dockerfile: PatientDiabeteRiskBackAPI/Dockerfile
    ports:
      - "7088:8087" 

  patientnotebackapi:
    image: patientnotebackapi
    container_name: patientnotebackapi
    build:
      context: .
      dockerfile: PatientNoteBackAPI/Dockerfile
    #Sqlserver and mongodb should run on container start.
    depends_on:
      - mssql
      - mongo
    #ConnectionString to sql server database P10_MediLabo_Patient-back.
    #environment:
      #update connection string for using sa user.
     #- SQLSERVER_URL=Server=localhost;User Id=sa;Password=Sql20243107*;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;TrustServerCertificate=True;
     #- SQLSERVER_URL=Server=localhost;User Id=sa;Password=Sql20243107*;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;MultipleActiveResultSets=True;TrustServerCertificate=True;
     #- SQLSERVER_URL=Server=localhost;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;MultipleActiveResultSets=True;TrustServerCertificate=True;
     #- SQLSERVER_URL=Server=localhost;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;TrustServerCertificate=True;
     #- SQLSERVER_URL=Server=127.0.0.1:1433;Integrated Security=True;Database=P10_MediLabo_Patient-back;Trusted_Connection=True;TrustServerCertificate=True;
    ports:
      - "7079:8085" 

  #MongoDB container.
  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017" 
    volumes:
      - ./mongo-data:/data/db
  
  #SqlServer container. https://learn.microsoft.com/fr-fr/dotnet/architecture/microservices/multi-container-microservice-net-applications/database-server-container    
  #SqlServer configuration https://gist.github.com/rchardptrsn/508f954445829433e840c93167c042ef
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql-db
    hostname: mssql-db
    environment:
      #comment sa user connection for avoiding updating connection string for sa user connection : https://stackoverflow.com/questions/69777990/cant-connect-from-the-docker-container-with-asp-net-core-to-sql-server-containe
      - ACCEPT_EULA:'Y'
      - MSSQL_SA_PASSWORD:'Sql20243107*'
      - MSSQL_DATA_DIR:/var/opt/mssql/data      
      - MSSQL_TCP_PORT:1433 
    ports:      
      - "1433:1433"
    volumes:
      - ./data:/var/opt/mssql/data
      - ./log:/var/opt/mssql/log
      - ./secrets:/var/opt/mssql/secrets   

  patientfront:
    image: patientfront
    #Container name when it runs (DNS name used for inter-container communication). https://stackoverflow.com/questions/55522620/docker-compose-yml-container-name-and-hostname 
    container_name: patientfront
    build:
      context: .
      dockerfile: PatientFront/Dockerfile
    # Host_port:container_port (example : https://localhost:8081). https://docs.docker.com/compose/how-tos/networking/
    ports:
      - "7287:8081"

  ocelotapigateway:
    image: ocelotapigateway
    container_name: ocelotapigateway
    # Defines container environment. https://docs.docker.com/compose/how-tos/environment-variables/set-environment-variables/
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      #OcelotGateway dockerfile exposed port.
      - ASPNETCORE_HTTP_PORTS=8089
      #Microservices gateways.
      - PatientFrontUrl=https://localhost:7287
      - PatientBackAPIUrl=https://localhost:7243
      - PatientNoteBackAPIUrl=https://localhost:7079
      - PatientDiabeteRiskBackAPIUrl=https://localhost:7088
    build:
      context: .
      dockerfile: Ocelot.APIGateway/Dockerfile
    # Host_port:container_port.
    ports:
      - "7195:8089"
    #Dependency (dependy service should run before starting container app). (could also set order of service startup(and stop)). https://geshan.com.np/blog/2024/02/docker-compose-depends-on/
    depends_on:
      - patientbackapi 

#volumes:
  #sqlserver data.
  #data:
  #mongodb data.
  #mongo-data:  